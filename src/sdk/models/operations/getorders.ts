/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../types";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetOrdersRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Platform-Key" })
    platformKey?: string;

    /**
     * The first page number for pagination
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=first" })
    first?: number;

    /**
     * Start date for order filtering in the format YYYY-MM-DD. Orders updated from this date will be returned.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=from" })
    from?: RFCDate;

    /**
     * The next page number for pagination
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=next" })
    next?: number;

    /**
     * End date for the orders filtering in the format YYYY-MM-DD. Orders updated before this date will be returned. If not provided, defaults to the current date.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=to" })
    to?: RFCDate;
}

export class GetOrdersResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * The orders corresponding to the provided `Platform-Key`
     */
    @SpeakeasyMetadata()
    orderCollection?: shared.OrderCollection;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
